/**
 * Checks if the argument passed is an object
 */
export declare const isObj: <T>(x: T) => boolean;
/**
 * Determine if two objects are equal
 */
export declare const equal: <T, U>(a: T, b: U) => boolean;
/**
 * Creates a function that negates the result of the predicate
 */
export declare const negate: <T>(predicate: (value?: T, index?: number, list?: T[]) => boolean) => any;
/**
 * Comparer helpers
 */
export declare const composeComparers: <T>(previousComparer: (a: T, b: T) => number, currentComparer: (a: T, b: T) => number) => (a: T, b: T) => number;
export declare const keyComparer: <T>(_keySelector: (key: T) => any, descending?: boolean) => (a: T, b: T) => number;
